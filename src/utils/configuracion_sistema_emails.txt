
# CONFIGURACIÓN DEL SISTEMA DE CORREO ELECTRÓNICO

Este documento detalla los pasos necesarios para configurar correctamente el sistema de envío de correos electrónicos en la aplicación de gestión de tareas.

## 1. INTRODUCCIÓN

El sistema de correo está diseñado para ser:
- Fiable (con reintentos automáticos)
- Escalable (soporte para múltiples usuarios simultáneos)
- Gratuito (usando cuentas de Gmail)
- Simple de mantener

## 2. REQUISITOS PREVIOS

- Cuenta de Gmail dedicada para el envío de correos
- Acceso a la configuración de seguridad de la cuenta de Google
- Node.js v14 o superior

## 3. CONFIGURACIÓN DE LA CUENTA DE GMAIL

### 3.1 Crear una cuenta de Gmail dedicada

Si aún no la tiene, cree una cuenta de Gmail dedicada para el envío de correos desde la aplicación.

### 3.2 Configurar contraseña de aplicación (RECOMENDADO)

Para evitar problemas de seguridad y bloqueos de Google, configure una contraseña de aplicación:

1. Acceda a la cuenta de Gmail en [https://myaccount.google.com](https://myaccount.google.com)
2. Vaya a "Seguridad"
3. Active la verificación en dos pasos (si no está activada)
4. Vuelva a "Seguridad" y busque "Contraseñas de aplicaciones"
5. Cree una nueva contraseña de aplicación para "Otra aplicación" (nombre: "Sistema de Tarefas")
6. Guarde la contraseña generada de 16 caracteres

### 3.3 Configuración alternativa: Permitir aplicaciones menos seguras

Si no puede usar contraseñas de aplicación, puede permitir el acceso de aplicaciones menos seguras:

1. Acceda a [https://myaccount.google.com/lesssecureapps](https://myaccount.google.com/lesssecureapps)
2. Active la opción "Permitir el acceso de aplicaciones menos seguras"

**NOTA**: Esta opción es menos recomendable por motivos de seguridad y Google podría deshabilitarla en el futuro.

## 4. CONFIGURACIÓN EN LA APLICACIÓN

### 4.1 Variables de entorno

Configure las siguientes variables de entorno en el servidor donde se ejecuta la API:

```
EMAIL_USER=su_correo@gmail.com
EMAIL_PASS=su_contraseña_de_aplicación
FRONTEND_URL=https://su-dominio-de-aplicacion.com
```

Puede configurar estas variables:
- En un archivo .env en la carpeta src/api (añadido al .gitignore)
- En las variables de entorno del sistema operativo
- En el panel de control del hosting (si está en un servicio como Heroku, Vercel, etc.)

### 4.2 Verificación de la configuración

Para verificar que la configuración es correcta:

1. Ejecute el servidor API: `node src/api/server.js`
2. Acceda al endpoint de prueba: `GET /api/email/test`
3. Debería recibir una respuesta de éxito confirmando la conexión con el servidor de correo

## 5. PERSONALIZACIÓN DE PLANTILLAS DE CORREO

Las plantillas de correo electrónico están definidas en `src/api/services/emailService.js`. 
Puede modificarlas para adaptarlas a sus necesidades:

1. Abra el archivo `emailService.js`
2. Busque la sección `templates`
3. Modifique el HTML de las plantillas según sus preferencias

## 6. RESOLUCIÓN DE PROBLEMAS COMUNES

### 6.1 Error "Username and Password not accepted"

Causas posibles:
- Credenciales incorrectas
- La cuenta tiene la verificación en dos pasos activada pero no se usa contraseña de aplicación
- Google ha bloqueado el intento por considerarlo sospechoso

Soluciones:
1. Verifique las credenciales
2. Genere una nueva contraseña de aplicación
3. Acceda a la cuenta de Gmail y busque notificaciones de seguridad
4. Vaya a [https://accounts.google.com/DisplayUnlockCaptcha](https://accounts.google.com/DisplayUnlockCaptcha)

### 6.2 Error "ECONNREFUSED" o "ETIMEDOUT"

Causas posibles:
- Problemas de red
- Firewall o reglas de seguridad bloqueando la conexión SMTP

Soluciones:
1. Verifique la conexión a Internet
2. Verifique que el puerto 587 esté abierto en su firewall
3. Pruebe con una conexión de red diferente

### 6.3 Límite de envíos de Gmail superado

Gmail tiene un límite de aproximadamente 500 correos por día para cuentas gratuitas.

Soluciones:
1. Distribuir el envío en varias cuentas de Gmail
2. Implementar una cola de correos para esparcir los envíos a lo largo del día
3. Considerar la opción de un servicio como SendGrid o Mailgun

## 7. MANTENIMIENTO Y MONITORIZACIÓN

- Revise regularmente los logs en busca de errores de envío
- Configure alertas para detectar fallos en el servidor de correo
- Considere implementar un sistema de monitorización para verificar periódicamente el funcionamiento del servicio

## 8. ACTUALIZACIÓN DEL SISTEMA

Para futuros cambios en el sistema de correo:

1. Modifique `src/api/services/emailService.js` para cambiar la lógica de envío
2. Modifique las rutas en `src/api/routes/email.js` para cambiar los endpoints
3. Siempre pruebe los cambios en un entorno de desarrollo antes de implementarlos en producción

## 9. RECURSOS ADICIONALES

- Documentación de Nodemailer: [https://nodemailer.com/about/](https://nodemailer.com/about/)
- Documentación de Gmail SMTP: [https://support.google.com/mail/answer/7126229](https://support.google.com/mail/answer/7126229)
- Límites de Gmail: [https://support.google.com/mail/answer/22839](https://support.google.com/mail/answer/22839)
